openapi: 3.0.1
info:
  title: Aggregate Plugin
  description: A plugin that allows the user to price insurance and reinsurance using chatGPT.
  version: 'v1'
servers:
  - url: http://localhost:5003
paths:
  /xol:
    post:
      operationId: xol_quickstart
      summary: "price excess of loss reinsurance with a given limit and attachment point"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pricing'
      responses:
        '200':
          description: "pricing result"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: number
        '400':
          description: Bad request. cannot price.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /qs:
    post:
      operationId: qs_quickstart
      summary: "price quota share reinsurance with a given portfolio distribution"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pricing'
      responses:
        '200':
          description: "pricing result"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: number
        '400':
          description: Bad request. cannot price.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    pricing:
      type: object
      required:
        - name
      properties:
        percentile:
          type: number
          minimum: 0
          exclusiveMinimum: true
          maximum: 1
          description: "Percentile parameter"
          example: 0.99
        name:
          type: string
          description: "name of the project"
          example: "Comm.Auto"
        freq_dist:
          type: string
          description: "frequency distribution"
          enum: [poisson, binomial, geometric, logarithmic]
          example: "poisson"
        claims_count:
          type: string
          description: "frequency parameter"
          example: "10"
        limit:
          type: string
          description: "Limit of the reinsurance"
          example: "10000"
        attach:
          type: string
          description: "Attachment point of the reinsurance layer"
          example: "0"
        sev_dist:
          type: string
          description: "Severity distribution name"
          enum: [alpha, argus, bradford, chi, chi2, dgamma, dweibull, erlang,
                                exponnorm, exponpow, fatiguelife, fisk, foldcauchy, foldnorm,
                                gamma, genextreme, genhalflogistic, genlogistic, gennorm, genpareto,
                                gompertz, halfgennorm, invgamma, invgauss, invweibull, kappa3, ksone,
                                kstwo, laplace_asymmetric, loggamma, loglaplace, lognorm, lomax,
                                nakagami, pareto, pearson3, powerlaw, powernorm, rdist, recipinvgauss,
                                rice, skewcauchy, skewnorm, t, triang, truncexpon, tukeylambda,
                                vonmises, vonmises_line, weibull_max, weibull_min, wrapcauchy]
          example: "lognorm"
        sev_mean:
          type: string
          description: "Severity mean parameter"
          example: "50"
        sev_cv:
          type: string
          description: "Severity coefficient of variation parameter"
          example: "4"
        distortion_label:
          type: string
          description: "the label to name the distortion function, based on the selected distortion"
          example: "myDUAL"
        distortion_name:
          type: string
          description: "the name of the distortion function"
          enum: [Dual, Proportional hazard, Wang, TVaR]
          example: "dual"
        distortion_param:
          type: string
          description: "parameter of the distortion function"
          example: "1.94363"

    Error:
      type: object
      properties:
        message:
          type: string
